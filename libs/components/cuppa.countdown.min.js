export class CuppaComponent extends HTMLElement{cuppa=null;cuppaStorage=null;pure=!1;shadow=!1;state={};refs={};updatedCallback=null;autoAddChilds=!0;autoDefineObservables=!0;_getStorageDictionary={};_parser=new DOMParser;constructor(){super(),this.binAll=this.binAll.bind(this),this.connectedCallback=this.connectedCallback.bind(this),this.setState=this.setState.bind(this),this.forceRender=this.forceRender.bind(this),this.draw=this.draw.bind(this),this.createRealNode=this.createRealNode.bind(this),this.setAttributes=this.setAttributes.bind(this),this.setData=this.setData.bind(this),this.setStorage=this.setStorage.bind(this),this.getData=this.getData.bind(this),this.getStorage=this.getStorage.bind(this),this.removeStorage=this.removeStorage.bind(this),this.destroy=this.destroy.bind(this),this.disconnectedCallback=this.disconnectedCallback.bind(this),this.processRefs=this.processRefs.bind(this),this.autoSetObservables=this.autoSetObservables.bind(this),this.observables=this.observables.bind(this),this.binAll(this),this.autoSetObservables()}connectedCallback(){setTimeout(()=>{!0===this.shadow&&(this.shadow="open"),this.shadow&&this.attachShadow({mode:this.shadow}),this.forceRender(),this.connected&&this.connected(this)},0)}setState(state,callback){let newState={...this.state,...state};JSON.stringify(newState)!=JSON.stringify(this.state)&&(this.state=newState,this.forceRender(callback))}forceRender(callback){if(this.pure)this.shadow?this.shadowRoot.innerHTML="shadow not supported in pure component":(this.innerHTML="",this.insertAdjacentHTML("afterbegin",this.render()));else{let html=this.render();this.autoAddChilds&&this.childs&&(html+=this.childs),html=html.trim(),html=html.replace(/\s+/gi," "),html=html.replace(/<!--(.*?)-->/g,""),html=html.replace(new RegExp("> <","g"),"><");let headNodes,bodyNodes,rootNodes=[...this._parser.parseFromString(html,"text/html").head.childNodes,...this._parser.parseFromString(html,"text/html").body.childNodes];this.shadow?(this.shadowRoot.append(""),rootNodes.map(node=>this.draw(node,0,null,this))):rootNodes.map((node,index)=>this.draw(node,index,null,this))}this.processRefs(this,this.refs,"ref"),callback&&callback(),this.rendered&&this.rendered(this)}draw(newNode,newNodeIndex,newNodeParent,realParentNode){let realNode=realParentNode.childNodes[newNodeIndex],isComponent=newNode&&-1!=newNode.nodeName.indexOf("-");if(realNode){if(newNode&&realNode.nodeName.toUpperCase()==newNode.nodeName.toUpperCase()){if(3==newNode.nodeType&&realNode.nodeValue!=newNode.nodeValue)return void(realNode.nodeValue=newNode.nodeValue);if(1==newNode.nodeType){let realKey=realNode.getAttribute("key"),newKey=newNode.getAttribute("key");if(newKey&&realKey!=newKey)if(realParentNode.childNodes.length<newNodeParent.childNodes.length){let newRealNode=this.createRealNode(newNode,isComponent);realNode.insertAdjacentElement("beforebegin",newRealNode),realNode=newRealNode}else if(realParentNode.childNodes.length>newNodeParent.childNodes.length){let nextNode=realNode.nextSibling;realParentNode.removeChild(realNode),realNode=nextNode}}}else if(newNode&&realNode.nodeName!=newNode.nodeName.toUpperCase()){if(3==newNode.nodeType)return void realParentNode.insertBefore(newNode,realNode);if(1==newNode.nodeType){let newRealNode=this.createRealNode(newNode,isComponent);realParentNode.insertBefore(newRealNode,realNode),realNode=newRealNode}}}else{if(newNode&&3==newNode.nodeType)return void realParentNode.insertAdjacentText("beforeend",newNode.nodeValue);newNode&&(realNode=this.createRealNode(newNode,isComponent),realParentNode.insertAdjacentElement("beforeend",realNode))}if(this.setAttributes(realNode,newNode),newNode&&isComponent)return;let i=0,length=newNode?newNode.childNodes.length:0;for(;i<length;)this.draw(newNode.childNodes[i],i,newNode,realNode),i++;if(newNode)for(;realNode.childNodes.length>length;)realNode.removeChild(realNode.childNodes[newNode.childNodes.length])}createRealNode(newNode,isComponent){let realNode=document.createElement(newNode.nodeName);return isComponent&&(realNode.childs=newNode.innerHTML),realNode}setAttributes(element,newDomMap){if(element&&1==element.nodeType&&newDomMap&&null!=newDomMap.attributes){let i=0,length=newDomMap.attributes.length;for(;i<length;){let name=newDomMap.attributes[i].nodeName,value=newDomMap.attributes[i].nodeValue,oldValue=element.getAttribute(name);if("value"==name&&element.value)element.value=value;else if(value){if(oldValue!=value&&element[`__old_event_${name}`]!=value)if(0===name.indexOf("on")&&name.length>2){element[`__old_event_${name}`]=value;let eventName=name.replace("on","");if(-1!=value.indexOf("=>"))element.removeEventListener(eventName,eval(value)),element.addEventListener(eventName,eval(value));else{let functionName=value.replace("this.",""),paramsStartAt=functionName.indexOf("(");if(-1==paramsStartAt)element.removeEventListener(eventName,this[functionName]),element.addEventListener(eventName,this[functionName]);else{let params=functionName.slice(paramsStartAt+1,functionName.indexOf(")"));params=params.split(","),params=params.map(param=>param.trim()),functionName=functionName.slice(0,paramsStartAt),element.removeEventListener(eventName,()=>this[functionName](...params)),element.addEventListener(eventName,()=>this[functionName](...params))}}}else element.setAttribute(name,value)}else element.removeAttribute(name);i++}}}setData(name,opts){!this.cuppa&&this.cuppaStorage&&(this.cuppa=this.cuppaStorage),this.cuppa&&this.cuppa.setData(name,opts)}setStorage(name,opts){this.setData(name,opts)}getData(name,opts){if(!this.cuppa&&this.cuppaStorage&&(this.cuppa=this.cuppaStorage),this.cuppa)return opts&&opts.callback?(this.cuppa.getData(name,opts),void(this._getStorageDictionary[name]=opts)):this.cuppa.getData(name,opts)}getStorage(name,opts){return this.getData(name,opts)}removeStorage(){!this.cuppa&&this.cuppaStorage&&(this.cuppa=this.cuppaStorage),this.cuppa&&Object.entries(this._getStorageDictionary).map(([key,value])=>{value&&value.callback&&this.cuppa.removeListener(key,value.callback),delete this._getStorageDictionary[key]})}destroy(){this.removeStorage()}disconnectedCallback(){this.destroy&&this.destroy(),this.disconnected&&this.disconnected(this)}processRefs(html,addTo,tagAttr){tagAttr||(tagAttr="id");let nodes={},elements=Array.from(html.querySelectorAll(`[${tagAttr}]`));for(let i=0;i<elements.length;i++)addTo?addTo[elements[i].getAttribute(tagAttr)]=elements[i]:nodes[elements[i].getAttribute(tagAttr)]=elements[i];return addTo?addTo.rootHtml=html:nodes.rootHtml=html,nodes}binAll(element,isFunction){let propertyNames=Object.getOwnPropertyNames(Object.getPrototypeOf(element));isFunction&&(propertyNames=Object.keys(element));for(let i=0;i<propertyNames.length;i++)"function"==typeof element[propertyNames[i]]&&(element[propertyNames[i]]=element[propertyNames[i]].bind(element))}autoSetObservables(){let baseParamsMap={};Object.keys(this).map(key=>baseParamsMap[key]=1),setTimeout(()=>{this.autoDefineObservables&&Object.keys(this).map(key=>{baseParamsMap[key]||this.observables({[key]:this[key]})})},0)}observables(object,callback){let target=this,firstName;if(object)return Object.keys(object).map((name,index)=>{index||(firstName=name);let value=object[name],privateVar="_"+name;target[privateVar]=value,Object.defineProperty(target,name,{set:value=>{target[privateVar]=value,target.forceRender&&target.forceRender(),callback&&callback()},get:()=>target[privateVar],configurable:!0})}),target[firstName]}}export default class CuppaCountDown extends CuppaComponent{countDown;time;type="default";callback;"show-days"=!0;"show-hours"=!0;"show-minutes"=!0;"show-seconds"=!0;"auto-remove"=!1;constructor(){super()}connected(){this.updateCountdown()}static get observedAttributes(){return["time","show-days","show-hours","show-minutes","show-seconds","type","auto-remove"]}attributeChangedCallback(attr,oldVal,newVal){this[attr]=newVal,"time"==attr&&this.updateCountdown()}updateCountdown(){if(this.countDown&&this.countDown.destroy(),!this.time)return;let date=this.time.length<=8?timeToDate(this.time):new Date(this.time);this.countDown=new countdown(date,()=>{this.countDown&&this.forceRender()},this.onComplete)}onComplete(){this.dispatchEvent(new Event("complete")),this.callback&&this.callback(this)}disconnected(){this.countDown&&this.countDown.destroy()}render(){return`\n            <style>\n                cuppa-countdown{ display: inline-flex; }\n                cuppa-countdown, cuppa-countdown *{ box-sizing: border-box; }\n                cuppa-countdown .box{ position:relative; margin:0 10px 0 0; border-radius: 5px; background: #29303D;  box-shadow: 0 3px 6px rgba(0,0,0,0.2); display: inline-flex; width: 46px; height: 46px; justify-content: center; align-items: center; }\n                cuppa-countdown .box:last-of-type{ margin:0; }\n                cuppa-countdown .overline{ display: block; width: 100%; position: absolute; height: 1px; background:#29303D; top:50%; }\n                cuppa-countdown .number{ color:#FFF; font-size: 31px; }\n                cuppa-countdown .text{ top:calc(100% + 5px); font-size: 11px; position: absolute; display: block; color:#444; font-weight: 700; }\n\n                cuppa-countdown .inline-box{ display:inline-flex; align-items:baseline; margin:0 15px 0 0; }\n                cuppa-countdown .inline-box:last-of-type{ margin:0;}\n                cuppa-countdown .inline-number{ font-size: 40px;}\n                cuppa-countdown .inline-text{ font-size:18px; }\n            </style>\n            <div class="${this.type}">\n                ${"inline"==this.type?`\n                    ${!boolean(this["show-days"])||boolean(this["auto-remove"])&&!val(this.countDown,"days")?"":`\n                        <div class="inline-box days">\n                            <span class="inline-number">${this.countDown?this.countDown.days:0}</span>\n                            <span class="inline-text">d</span>\n                        </div>\n                    `}\n    \n                    ${!boolean(this["show-hours"])||boolean(this["auto-remove"])&&!val(this.countDown,"hours")&&!val(this.countDown,"days")?"":`\n                        <div class="inline-box hours">\n                            <span class="inline-number">${this.countDown?this.countDown.hours:0}</span>\n                            <span class="inline-text">h</span>\n                        </div>\n                    `}\n    \n                    ${boolean(this["show-minutes"])&&(!boolean(this["auto-remove"])||val(this.countDown,"minutes")||val(this.countDown,"hours")||val(this.countDown,"days"))?`\n                        <div class="inline-box minutes">\n                            <span class="inline-number">${this.countDown?this.countDown.minutes:0}</span>\n                            <span class="inline-text">m</span>\n                        </div>\n                    `:""}\n    \n                    ${boolean(this["show-seconds"])&&(!boolean(this["auto-remove"])||val(this.countDown,"seconds")||val(this.countDown,"minutes")||val(this.countDown,"hours")||val(this.countDown,"days"))?`\n                        <div class="inline-box seconds">\n                            <span class="inline-number">${this.countDown?this.countDown.seconds:0}</span>\n                            <span class="inline-text">s</span>\n                        </div>\n                    `:""}\n                `:`\n                    ${!boolean(this["show-days"])||boolean(this["auto-remove"])&&!val(this.countDown,"days")?"":`\n                        <div class="box days" >\n                            <span class="number">${left0(this.countDown?this.countDown.days:0)}</span>\n                            <div class="overline"></div>\n                            <span class="text">Days</span>\n                        </div>\n                    `}\n                    \n                    ${!boolean(this["show-hours"])||boolean(this["auto-remove"])&&!val(this.countDown,"hours")&&!val(this.countDown,"days")?"":`\n                        <div class="box hours" >\n                            <span class="number">${left0(this.countDown?this.countDown.hours:0)}</span>\n                            <div class="overline"></div>\n                            <span class="text">Hours</span>\n                        </div>\n                    `}\n    \n                    ${boolean(this["show-minutes"])&&(!boolean(this["auto-remove"])||val(this.countDown,"minutes")||val(this.countDown,"hours")||val(this.countDown,"days"))?`\n                        <div class="box minutes" >\n                            <span class="number">${left0(this.countDown?this.countDown.minutes:0)}</span>\n                            <div class="overline"></div>\n                            <span class="text">Minutes</span>\n                        </div>\n                    `:""}\n    \n                    ${boolean(this["show-seconds"])&&(!boolean(this["auto-remove"])||val(this.countDown,"seconds")||val(this.countDown,"minutes")||val(this.countDown,"hours")||val(this.countDown,"days"))?`\n                        <div class="box seconds" >\n                            <span class="number">${left0(this.countDown?this.countDown.seconds:0)}</span>\n                            <div class="overline"></div>\n                            <span class="text">Seconds</span>\n                        </div>\n                    `:""}\n                `}\n            </div>\n            \n        `}}customElements.define("cuppa-countdown",CuppaCountDown);let left0=function(value){return value||(value=0),(value=parseFloat(value))<10&&(value="0"+value),value},countdown=function(dateTarget,callback,callbackComplete,updateInterval){this.days=0,this.hours=0,this.minutes=0,this.seconds=0,this.timeout=null,this.status="running",this.constructor=function(){bindAll(this,!0),null==updateInterval&&(updateInterval=1e3),this.update()},this.update=function(){let timeLeft=dateTarget.getTime()-(new Date).getTime();this.seconds=Math.floor(timeLeft/1e3),this.minutes=Math.floor(this.seconds/60),this.hours=Math.floor(this.minutes/60),this.days=Math.floor(this.hours/24),this.seconds%=60,this.minutes%=60,this.hours%=24,this.days<=0&&this.hours<=0&&this.minutes<=0&&this.seconds<=0?(this.days=0,this.hours=0,this.minutes=0,this.seconds=0,this.status="end",callbackComplete&&callbackComplete(this)):(this.timeout&&clearTimeout(this.timeout),this.timeout=setTimeout(this.update,updateInterval)),callback&&callback(this)},this.destroy=function(){this.timeout&&clearTimeout(this.timeout)},this.constructor()},bindAll=function(element,isFunction){let propertyNames=Object.getOwnPropertyNames(Object.getPrototypeOf(element));isFunction&&(propertyNames=Object.keys(element));for(let i=0;i<propertyNames.length;i++)"function"==typeof element[propertyNames[i]]&&(element[propertyNames[i]]=element[propertyNames[i]].bind(element))},timeToDate=function(value){value||(value="00:00:00"),value=value.toUpperCase();let hours=parseInt(value.substr(0,2));-1!=value.indexOf("AM")&&12==hours&&(hours=0),-1!=value.indexOf("PM")&&12!=hours&&(hours+=12);let minutes=parseInt(value.substr(3,2)),seconds=parseInt(value.substr(6,2)),date=new Date;return date.setHours(hours),date.setMinutes(minutes),date.setSeconds(seconds),date},boolean=function(value){let result=value;return result="false"!==result&&!1!==result&&0!==result&&"0"!==result&&null!=result&&""!==result,result},val=function(data,path,defaultValue){if(!data)return defaultValue;if(data&&!path)return data;path=trim(path).split(".");let element=data;for(let i=0;i<path.length;i++)try{element=element[path[i]]}catch(err){element="";break}if(element){let tmp=JSON.stringify(element);"{}"!=tmp&&"[]"!=tmp&&null!=tmp&&null!=tmp||(element="")}return""!==element&&null!=element||null==defaultValue||(element=defaultValue),element},trim=function(string){return string?string.replace(/^\s+|\s+$/g,""):""};